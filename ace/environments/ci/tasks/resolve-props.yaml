apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: resolve-props
spec:
  params:
    - name: is-source-directory
  results:
    - name: is-project
    - name: is-application-name
    - name: is-release-name
    - name: is-configuration-keystore
    - name: is-configuration-truststore
    - name: is-configuration-setdbparms
    - name: is-configuration-serverconf
    - name: is-configuration-policyproject
    - name: is-configuration-loopbackdatasource
    - name: mq-queue-name
    - name: mq-end-point-policy-file
    - name: registry-host
    - name: previous-is-genenration
    - name: previous-deployment-revision
    - name: endpoint-path
    - name: is-configurations
    - name: is-license
    - name: is-license-use
    - name: is-service-endpoint-type
    - name: is-version
    - name: is-base-image
  steps:
    - name: parse-source-properties
      image: mikefarah/yq:4.7.1
      script: |
        set -ex

        properties_yaml_path=$(workspaces.input.path)/$(params.is-source-directory)/pipeline_properties.yaml

        if [[ ! -e $properties_yaml_path ]]; then
          echo "no pipeline property file found"
          exit 0
        fi

        resolve_props() {
          exp=$1
          result_path=$2

          echo -n `yq e "$exp // [] | join (\" \")" $properties_yaml_path` > $result_path
        }

        resolve_prop() {
          exp=$1
          result_path=$2

          echo -n `yq e "$exp // \"\" " $properties_yaml_path` > $result_path
        }

        resolve_props '.integrationServer.project' /tekton/results/is-project
        resolve_prop '.integrationServer.applicationName' /tekton/results/is-application-name
        resolve_prop '.integrationServer.releaseName' /tekton/results/is-release-name
        resolve_prop '.integrationServer.endpoint-path' /tekton/results/endpoint-path
        resolve_props '.integrationServer.configurations.keystore' /tekton/results/is-configuration-keystore
        resolve_props '.integrationServer.configurations.truststore' /tekton/results/is-configuration-truststore
        resolve_props '.integrationServer.configurations.setdbparms' /tekton/results/is-configuration-setdbparms
        resolve_props '.integrationServer.configurations.serverconf' /tekton/results/is-configuration-serverconf
        resolve_props '.integrationServer.configurations.policyproject' /tekton/results/is-configuration-policyproject
        resolve_props '.integrationServer.configurations.loopbackdatasource' /tekton/results/is-configuration-loopbackdatasource

        resolve_prop '.mq.queueName' /tekton/results/mq-queue-name
        resolve_prop '.mq.endPointPolicyFile' /tekton/results/mq-end-point-policy-file

        resolve_props '.integrationServer.configurations.*' /tekton/results/is-configurations

        resolve_prop '.integrationServer.license.license' /tekton/results/is-license
        resolve_prop '.integrationServer.license.use' /tekton/results/is-license-use
        resolve_prop '.integrationServer.service.endpointType' /tekton/results/is-service-endpoint-type
        resolve_prop '.integrationServer.version' /tekton/results/is-version
        resolve_prop '.integrationServer.baseImage' /tekton/results/is-base-image

    - name: resolve-ocp-properties
      image: quay.io/openshift/origin-cli:latest
      script: |
        
        release_name=$(cat /tekton/results/is-release-name)
        echo $release_name

        set +e
        previous_is_genenration=$(oc get integrationserver \
                $release_name -o jsonpath='{.metadata.generation}' 2>/dev/null)
        set -e

        echo -n $previous_is_genenration > /tekton/results/previous-is-genenration

        if [[ ! -z $previous_is_genenration ]]; then
          oc get deployment \
                -l app.kubernetes.io/instance=$release_name \
                -o jsonpath='{$.items[0].metadata.annotations.deployment\\.kubernetes\\.io/revision}' 2>/dev/null > /tekton/results/previous-deployment-revision
        else
          touch /tekton/results/previous-deployment-revision
        fi

        echo -n $(oc registry info) > /tekton/results/registry-host

  workspaces:
    - name: input

